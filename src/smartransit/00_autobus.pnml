/* This is the template. When you're more experienced, you can try editing this, but if it's all gibberish then just modify "FooBarTramVehicleTemplates.png" in GIMP to create a vehicle. Each template below refers to a specific vehicle length, so make sure to put the vehicle sprites in the right part of "FooBarTramVehicleTemplates.png" when drawing a vehicle. */

template template_bus_32(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         20,         10,        28,           -4,         -11]
    [0+ 20,     20,         26,        28,          -17,         -14]
    [0+ 50,     20,         36,        28,          -18,         -20]
    [0+ 90,     20,         26,        28,           -9,         -15]
    [0+120,     20,         10,        28,           -4,         -11]
    [0+140,     20,         26,        28,          -16,         -16]
    [0+170,     20,         36,        28,          -18,         -20]
    [0+210,     20,         26,        28,           -8,         -16]
}

template template_bus_28(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         60,         10,        28,           -4,         -11]
    [0+ 20,     60,         26,        28,          -17,         -14]
    [0+ 50,     60,         36,        28,          -20,         -20]
    [0+ 90,     60,         26,        28,           -9,         -15]
    [0+120,     60,         10,        28,           -4,         -13]
    [0+140,     60,         26,        28,          -16,         -16]
    [0+170,     60,         36,        28,          -16,         -20]
    [0+210,     60,         26,        28,           -8,         -16]
}

template template_bus_24(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         100,        10,        28,           -4,         -11]
    [0+ 20,     100,        26,        28,          -17,         -14]
    [0+ 50,     100,        36,        28,          -22,         -20]
    [0+ 90,     100,        26,        28,           -9,         -15]
    [0+120,     100,        10,        28,           -4,         -15]
    [0+140,     100,        26,        28,          -16,         -16]
    [0+170,     100,        36,        28,          -14,         -20]
    [0+210,     100,        26,        28,           -8,         -16]
}

template template_bus_20(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         140,        10,        28,           -4,         -10]
    [0+ 20,     140,        26,        28,          -17,         -14]
    [0+ 50,     140,        36,        28,          -24,         -20]
    [0+ 90,     140,        26,        28,           -9,         -15]
    [0+120,     140,        10,        28,           -4,         -16]
    [0+140,     140,        26,        28,          -16,         -16]
    [0+170,     140,        36,        28,          -12,         -20]
    [0+210,     140,        26,        28,           -8,         -16]
}

template template_bus_16(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         180,        10,        28,           -4,          -9]
    [0+ 20,     180,        26,        28,          -17,         -14]
    [0+ 50,     180,        36,        28,          -26,         -20]
    [0+ 90,     180,        26,        28,           -9,         -15]
    [0+120,     180,        10,        28,           -4,         -17]
    [0+140,     180,        26,        28,          -16,         -16]
    [0+170,     180,        36,        28,          -10,         -20]
    [0+210,     180,        26,        28,           -8,         -16]
}

template template_bus_12(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         220,        10,        28,           -4,          -8]
    [0+ 20,     220,        26,        28,          -17,         -14]
    [0+ 50,     220,        36,        28,          -28,         -20]
    [0+ 90,     220,        26,        28,           -9,         -15]
    [0+120,     220,        10,        28,           -4,         -18]
    [0+140,     220,        26,        28,          -16,         -16]
    [0+170,     220,        36,        28,           -8,         -20]
    [0+210,     220,        26,        28,           -8,         -16]
}

template template_bus_8(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         260,        10,        28,           -4,          -7]
    [0+ 20,     260,        26,        28,          -17,         -14]
    [0+ 50,     260,        36,        28,          -30,         -20]
    [0+ 90,     260,        26,        28,           -9,         -15]
    [0+120,     260,        10,        28,           -4,         -19]
    [0+140,     260,        26,        28,          -16,         -16]
    [0+170,     260,        36,        28,           -6,         -20]
    [0+210,     260,        26,        28,           -8,         -16]
}

template template_bus_4(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         300,        10,        28,           -4,          -6]
    [0+ 20,     300,        26,        28,          -17,         -14]
    [0+ 50,     300,        36,        28,          -32,         -20]
    [0+ 90,     300,        26,        28,           -9,         -15]
    [0+120,     300,        10,        28,           -4,         -20]
    [0+140,     300,        26,        28,          -16,         -16]
    [0+170,     300,        36,        28,           -4,         -20]
    [0+210,     300,        26,        28,           -8,         -16]
}

template template_purchase(x, y) {
    //[left_x,  upper_y,    width,     height,     offset_x,     offset_y]
    [0,         340,        50,        12,          -25,          -6]
}

/* These are the spritesets. */

//Step 1: Give your png file a name that makes sense to you.

//Step 2: Change "set_autobus_... to set_<insertlabelhere>_... and "gfx/graphics/road/AUTO/autobus_0.png" to "gfx/<insert full path here>/<insertgrfnamehere>.png".

//Step 3: Change "template_bus_28" to "template_bus_xx", replacing xx with the length of the FRONT section of the articulated vehicle. Remember that you can only use 32, 28, 24, 20, 16, 12, 8 and 4 unless you change the templates.

//Step 4: Change "template_bus_22" to "template_bus_xx", replacing xx with the length of the REAR section of the articulated vehicle. Remember that you can only use 32, 28, 24, 20, 16, 12, 8 and 4 unless you change the templates.

spriteset (set_smartram_front_lighted,	"gfx/graphics/tram/AUTO/smartram_0.png") { template_bus_28(2, 2) }
spriteset (set_smartram_rear_lighted,	"gfx/graphics/tram/AUTO/smartram_0.png") { template_bus_20(386, 2) }
spriteset (set_smartram_purchase,		"gfx/graphics/tram/AUTO/smartram_0.png") { template_purchase(290, 2) }

spriteset (set_autobus_front_lighted,	"gfx/graphics/road/AUTO/autobus_0.png") { template_bus_28(2, 2) }
spriteset (set_autobus_rear_lighted,	"gfx/graphics/road/AUTO/autobus_0.png") { template_bus_20(386, 2) }
spriteset (set_autobus_purchase,		"gfx/graphics/road/AUTO/autobus_0.png") { template_purchase(290, 2) }

//--- Tram

switch (FEAT_ROADVEHS, SELF, switch_articulated_smartram, extra_callback_info1)
{ 1: return item_smartram_0_rear; return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

/*
switch (FEAT_ROADVEHS, SELF, switch_smartram_0_speed, current_tramtype) {
	// OABI
	OAaI: return 10;
	OAAI: return 20;
	OABI: return 30;
	OAbI: return 30;
	OACI: return 40;
	OAcI: return 50;
	OBaI: return 20;
	OBAI: return 40;
	OBBI: return 60;
	OBbI: return 60;
	OBCI: return 80;
	OBcI: return 100;
	OCaI: return 30;
	OCAI: return 60;
	OCBI: return 90;
	OCbI: return 90;
	OCCI: return 100;
	OCcI: return 100;
	ODaI: return 40;
	ODAI: return 80;
	ODBI: return 100;
	ODbI: return 100;
	ODCI: return 100;
	ODcI: return 100;
	OEaI: return 50;
	OEAI: return 100;
	OEBI: return 100;
	OEbI: return 100;
	OECI: return 100;
	OEcI: return 100;
	// OABS
	OAaS: return 10;
	OAAS: return 20;
	OABS: return 30;
	OAbS: return 30;
	OACS: return 40;
	OAcS: return 50;
	OBaS: return 20;
	OBAS: return 40;
	OBBS: return 60;
	OBbS: return 60;
	OBCS: return 80;
	OBcS: return 100;
	OCaS: return 30;
	OCAS: return 60;
	OCBS: return 90;
	OCbS: return 90;
	OCCS: return 105;
	OCcS: return 120;
	ODaS: return 40;
	ODAS: return 80;
	ODBS: return 120;
	ODbS: return 120;
	ODCS: return 160;
	ODcS: return 200;
	OEaS: return 50;
	OEAS: return 100;
	OEBS: return 150;
	OEbS: return 150;
	OECS: return 200;
	OEcS: return 250;
	// Error(?)
	CB_FAILED;
}
*/

switch (FEAT_ROADVEHS, SELF, switch_smartram_0_energy, current_tramtype) {
	// OABI
	OAaI: return 10;
	OAAI: return 20;
	OABI: return 30;
	OAbI: return 30;
	OACI: return 40;
	OAcI: return 50;
	OBaI: return 20;
	OBAI: return 40;
	OBBI: return 60;
	OBbI: return 60;
	OBCI: return 80;
	OBcI: return 100;
	OCaI: return 30;
	OCAI: return 60;
	OCBI: return 90;
	OCbI: return 90;
	//OCCI: return 120;
	//OCcI: return 150;
	ODaI: return 40;
	ODAI: return 80;
	//ODBI: return 120;
	//ODbI: return 120;
	//ODCI: return 160;
	//ODcI: return 200;
	OEaI: return 50;
	OEAI: return 100;
	//OEBI: return 150;
	//OEbI: return 150;
	//OECI: return 200;
	//OEcI: return 250;
	// OABS
	OAaS: return 10;
	OAAS: return 20;
	OABS: return 30;
	OAbS: return 30;
	OACS: return 40;
	OAcS: return 50;
	OBaS: return 20;
	OBAS: return 40;
	OBBS: return 60;
	OBbS: return 60;
	OBCS: return 80;
	//OBcS: return 100;
	OCaS: return 30;
	OCAS: return 60;
	OCBS: return 90;
	OCbS: return 90;
	//OCCS: return 120;
	//OCcS: return 150;
	ODaS: return 40;
	ODAS: return 80;
	//ODBS: return 120;
	//ODbS: return 120;
	//ODCS: return 160;
	//ODcS: return 200;
	OEaS: return 50;
	//OEAS: return 100;
	//OEBS: return 150;
	//OEbS: return 150;
	//OECS: return 200;
	//OEcS: return 250;
	// Error(?)
	CB_FAILED;
}

switch (FEAT_ROADVEHS, SELF, switch_smartram_0_maintenance, current_tramtype) {
	// --OAbI--
	//OAaI: return 64;
	OAAI: return 64;
	OABI: return 64;
	OAbI: return 64;
	OACI: return 64;
	//OAcI: return 64;
	//OBaI: return 64;
	OBAI: return 64;
	OBBI: return 64;
	OBbI: return 64;
	OBCI: return 64;
	//OBcI: return 64;
	//OCaI: return 64;
	OCAI: return 64;
	OCBI: return 64;
	OCbI: return 64;
	OCCI: return 64;
	//OCcI: return 64;
	//ODaI: return 64;
	ODAI: return 64;
	ODBI: return 64;
	ODbI: return 64;
	ODCI: return 64;
	//ODcI: return 64;
	//OEaI: return 64;
	OEAI: return 64;
	OEBI: return 64;
	OEbI: return 64;
	OECI: return 64;
	//OEcI: return 64;
	// --OABI--
	//OAaI: return 32;
	OAAI: return 32;
	OABI: return 32;
	OAbI: return 32;
	OACI: return 32;
	//OAcI: return 32;
	//OBaI: return 32;
	OBAI: return 32;
	OBBI: return 32;
	OBbI: return 32;
	OBCI: return 32;
	//OBcI: return 32;
	//OCaI: return 32;
	OCAI: return 32;
	OCBI: return 32;
	OCbI: return 32;
	OCCI: return 32;
	//OCcI: return 32;
	//ODaI: return 32;
	ODAI: return 32;
	ODBI: return 32;
	ODbI: return 32;
	ODCI: return 32;
	//ODcI: return 32;
	//OEaI: return 32;
	OEAI: return 32;
	OEBI: return 32;
	OEbI: return 32;
	OECI: return 32;
	//OEcI: return 32;
	// --OABS--
	OAaS: return 9;
	OAAS: return 18;
	OABS: return 27;
	OAbS: return 36;
	OACS: return 36;
	OAcS: return 45;
	OBaS: return 18;
	OBAS: return 27;
	OBBS: return 36;
	OBbS: return 45;
	OBCS: return 45;
	//OBcS: return 54;
	OCaS: return 18;
	OCAS: return 18;
	OCBS: return 18;
	OCbS: return 18;
	//OCCS: return 18;
	//OCcS: return 18;
	//ODaS: return 18;
	ODAS: return 18;
	ODBS: return 18;
	ODbS: return 18;
	ODCS: return 18;
	//ODcS: return 18;
	//OEaS: return 18;
	OEAS: return 18;
	OEBS: return 18;
	OEbS: return 18;
	OECS: return 18;
	//OEcS: return 18;
	// --Error(?)--
	CB_FAILED;
}

//------------------------------------------------TEST TRAM CODE SECTION------------------------------------------------

/* This is the item that the road vehicle comes from. Change "item_smartram_0_front" to "item_<insertnamehere>_0_front". You can edit most of the properties listed under the "property" block to reflect the stats of the vehicle. */

item(FEAT_ROADVEHS, item_smartram_0_front) {
    property {
        name: string(STR_NAME_TRAM_ARTICULATED);
        climates_available: bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND); // available in toyland?
        introduction_date: date(2015, 7, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 20;
        reliability_decay: 32;
        refittable_cargo_classes: bitmask();
        non_refittable_cargo_classes: bitmask();
        cargo_allow_refit: [];
        cargo_disallow_refit: [];
        cost_factor: 208;
        running_cost_factor: 6;
        sprite_id: SPRITE_ID_NEW_ROADVEH;
        speed: 120 km/h;
        refit_cost: 0;
        tram_type: OAbG;
        power: 200 hp;
        running_cost_base: RUNNING_COST_ROADVEH;
		default_cargo_type: PASS;
        cargo_capacity: 40;
        weight: 6 tons;
        //air_drag_coefficient: default;
        length: 7;
		loading_speed: 6;
		visual_effect: EFFECT_SPAWN_MODEL_NONE;
		misc_flags: bitmask(ROADVEH_FLAG_TRAM, ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
    }
	
/* This is the graphics block that the road vehicle's graphics comes from. Refer to Step 2 of the spriteset instructions earlier in this code to replace "set_smartram_..." and change "switch_articulated_test" to "switch_articulated_<insertnamehere>". */
	
    graphics {
        default: set_smartram_front_lighted;
        purchase: set_smartram_purchase;
        articulated_part: switch_articulated_smartram;
//		speed: switch_smartram_0_speed;
		running_cost_factor: switch_smartram_0_energy;
		reliability_decay: switch_smartram_0_maintenance;
    }
}

/* This is the item that the road vehicle's trailer comes from. Change "item_smartram_0_rear" to "item_<insertnamehere>_0_rear". You can edit most of the properties listed under "property" to reflect the stats of the vehicle, but remember that it's supposed to be a trailer, not a vehicle unto itself. Despite this, the trailer must have at least 1 hp, due to a quirk of OpenTTD. */

item(FEAT_ROADVEHS, item_smartram_0_rear) {
    property {
        name: string(STR_NAME_TRAM_ARTICULATED);
        climates_available: NO_CLIMATE; // available in toyland?
        introduction_date: date(2015, 7, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 0;
        reliability_decay: 20;
        refittable_cargo_classes: bitmask();
        non_refittable_cargo_classes: bitmask();
        cargo_allow_refit: [];
        cargo_disallow_refit: [];
        cost_factor: 0;
        running_cost_factor: 0;
        sprite_id: SPRITE_ID_NEW_ROADVEH;
        refit_cost: 0;
        tram_type: OAbG;
        power: 1 hp;
        running_cost_base: RUNNING_COST_NONE;
		default_cargo_type: PASS;
        cargo_capacity: 20;
        weight: 3 tons;
        //air_drag_coefficient: default;
        length: 5;
		misc_flags: bitmask(ROADVEH_FLAG_TRAM, ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
    }
    graphics {
        default: set_smartram_rear_lighted;
        //purchase: set_smartram_rear_lighted;
			
    }
}

// ---------------------------------- //
/* -- SELF-DRIVING ARTICULATED BUS -- */
// ---------------------------------- //

switch (FEAT_ROADVEHS, SELF, switch_articulated_autobus, extra_callback_info1)
{ 1: return item_autobus_0_rear; return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_ROADVEHS, SELF, switch_autobus_0_speed, current_roadtype) {
//
//--- Slowest and least-stable roads
//
	RAaN: return 5;
	RAaE: return 5;
	RAaI: return 10;
//---
	RAAN: return 15;
	RAAE: return 15;
	RAaI: return 20;
//---
	RABN: return 25;
	RABE: return 25;
	RABI: return 30;
//---
	RAbN: return 25;
	RAbE: return 25;
	RAbI: return 30;
//---
	RACN: return 35;
	RACE: return 35;
	RACI: return 40;
//---
	RAcN: return 45;
	RAcE: return 45;
	RACI: return 50;
//--- x2
	RBaN: return 10;
	RBaE: return 10;
	RBaI: return 20;
//---
	RBAN: return 30;
	RBAE: return 30;
	RBAI: return 40;
//---
	RBBN: return 50;
	RBBE: return 50;
	RBBI: return 60;
//---
	RBbN: return 50;
	RBbE: return 50;
	RBbI: return 60;
//---
	RBCN: return 70;
	RBCE: return 70;
	RBCI: return 80;
//---
	RBcN: return 90;
	RBcE: return 90;
	RBcI: return 100;
//--- x3
	RCaN: return 15;
	RCaE: return 15;
	RCaI: return 30;
//---
	RCAN: return 45;
	RCAE: return 45;
	RCAI: return 60;
//---
	RCBN: return 75;
	RCBE: return 75;
	RCBI: return 90;
//---
	RCbN: return 75;
	RCbE: return 75;
	RCbI: return 90;
//---
	RCCN: return 105;
	RCCE: return 105;
	RCCI: return 120;
//---
	RCcN: return 135;
	RCcE: return 135;
	RCcI: return 150;
//--- x4
	RDaN: return 20;
	RDaE: return 20;
	RDaI: return 40;
//---
	RDAN: return 60;
	RDAE: return 60;
	RDAI: return 80;
//---
	RDBN: return 100;
	RDBE: return 100;
	RDBI: return 120;
//---
	RDbN: return 100;
	RDbE: return 100;
	RDbI: return 120;
//---
	RDCN: return 140;
	RDCE: return 140;
	RDCI: return 160;
//---
	RDcN: return 180;
	RDcE: return 180;
	RDcI: return 200;
//--- x5
	REaN: return 25;
	REaE: return 25;
	REaI: return 50;
//---
	REAN: return 75;
	REAE: return 75;
	REAI: return 100;
//---
	REBN: return 125;
	REBE: return 125;
	REBI: return 150;
//---
	REbN: return 125;
	REbE: return 125;
	REbI: return 150;
//---
	RECN: return 175;
	RECE: return 175;
	RECI: return 200;
//---
	REcN: return 225;
	REcE: return 225;
	REcI: return 250;

//--- Slowest and least stable guided busways
//
	GAaN: return 5;
	GAaE: return 5;
	GAaI: return 10;
//---
	GAAN: return 15;
	GAAE: return 15;
	GAAI: return 20;
//---
	GABN: return 25;
	GABE: return 25;
	GABI: return 30;
//---
	GAbN: return 25;
	GAbE: return 25;
	GAbI: return 30;
//---
	GACN: return 35;
	GACE: return 35;
	GACI: return 40;
//---
	GAcN: return 45;
	GAcE: return 45;
	GAcI: return 50;
//--- x2
	GBaN: return 10;
	GBaE: return 10;
	GBaI: return 20;
//---
	GBAN: return 30;
	GBAE: return 30;
	GBAI: return 40;
//---
	GBBN: return 50;
	GBBE: return 50;
	GBBI: return 60;
//---
	GBbN: return 50;
	GBbE: return 50;
	GBbI: return 60;
//---
	GBCN: return 70;
	GBCE: return 70;
	GBCI: return 80;
//---
	GBcN: return 90;
	GBcE: return 90;
	//GBcI: return 100;
//--- x3
	GCaN: return 15;
	GCaE: return 15;
	GCaI: return 30;
//---
	GCAN: return 45;
	GCAE: return 45;
	GCAI: return 60;
//---
	GCBN: return 75;
	GCBE: return 75;
	GCBI: return 90;
//---
	GCbN: return 75;
	GCbE: return 75;
	GCbI: return 90;
//---
	//GCCN: return 105;
	//GCCE: return 105;
	//GCCI: return 120;
//---
	//GCcN: return 135;
	//GCcE: return 135;
	//GCcI: return 150;
//--- x4
	GDaN: return 20;
	GDaE: return 20;
	GDaI: return 40;
//---
	GDAN: return 60;
	GDAE: return 60;
	GDAI: return 80;
//---
	//GDBN: return 100;
	//GDBE: return 100;
	//GDBI: return 120;
//---
	//GDbN: return 100;
	//GDbE: return 100;
	//GDbI: return 120;
//---
	//GDCN: return 140;
	//GDCE: return 140;
	//GDCI: return 160;
//---
	//GDcN: return 180;
	//GDcE: return 180;
	//GDcI: return 200;
//--- x5
	GEaN: return 25;
	GEaE: return 25;
	GEaI: return 50;
//---
	GEAN: return 75;
	GEAE: return 75;
	//GEAI: return 100;
//---
	//GEBN: return 125;
	//GEBE: return 125;
	//GEBI: return 150;
//---
	//GEbN: return 125;
	//GEbE: return 125;
	//GEbI: return 150;
//---
	//GECN: return 175;
	//GECE: return 175;
	//GECI: return 200;
//---
	//GEcN: return 225;
	//GEcE: return 225;
	//GEcI: return 250;
//---
	CB_FAILED;
}

switch (FEAT_ROADVEHS, SELF, switch_autobus_0_maintenance, current_roadtype) {
//
//--- Slowest and least-stable roads
//
	RAaN: return 64;
	RAaE: return 64;
	RAaI: return 32;
//---
	RAAN: return 64;
	RAAE: return 64;
	RAaI: return 32;
//---
	RABN: return 64;
	RABE: return 25;
	RABI: return 32;
//---
	RAbN: return 64;
	RAbE: return 64;
	RAbI: return 32;
//---
	RACN: return 64;
	RACE: return 64;
	RACI: return 32;
//---
	RAcN: return 64;
	RAcE: return 64;
	RACI: return 32;
//--- x2
	RBaN: return 64;
	RBaE: return 64;
	RBaI: return 32;
//---
	RBAN: return 64;
	RBAE: return 64;
	RBAI: return 32;
//---
	RBBN: return 64;
	RBBE: return 64;
	RBBI: return 32;
//---
	RBbN: return 64;
	RBbE: return 64;
	RBbI: return 32;
//---
	RBCN: return 64;
	RBCE: return 64;
	RBCI: return 32;
//---
	RBcN: return 64;
	RBcE: return 64;
	//RBcI: return 32;
//--- x3
	RCaN: return 64;
	RCaE: return 64;
	RCaI: return 32;
//---
	RCAN: return 64;
	RCAE: return 64;
	RCAI: return 32;
//---
	RCBN: return 64;
	RCBE: return 64;
	RCBI: return 32;
//---
	RCbN: return 64;
	RCbE: return 64;
	RCbI: return 32;
//---
	//RCCN: return 64;
	//RCCE: return 64;
	//RCCI: return 32;
//---
	//RCcN: return 64;
	//RCcE: return 64;
	//RCcI: return 32;
//--- x4
	RDaN: return 64;
	RDaE: return 64;
	RDaI: return 32;
//---
	RDAN: return 64;
	RDAE: return 64;
	RDAI: return 32;
//---
	//RDBN: return 64;
	//RDBE: return 64;
	//RDBI: return 32;
//---
	//RDbN: return 64;
	//RDbE: return 64;
	//RDbI: return 32;
//---
	//RDCN: return 64;
	//RDCE: return 64;
	//RDCI: return 32;
//---
	//RDcN: return 64;
	//RDcE: return 64;
	//RDcI: return 32;
//--- x5
	REaN: return 64;
	REaE: return 64;
	REaI: return 32;
//---
	REAN: return 64;
	REAE: return 64;
	//REAI: return 32;
//---
	//REBN: return 64;
	//REBE: return 64;
	//REBI: return 32;
//---
	//REbN: return 64;
	//REbE: return 64;
	//REbI: return 32;
//---
	//RECN: return 64;
	//RECE: return 64;
	//RECI: return 32;
//---
	//REcN: return 64;
	//REcE: return 64;
	//REcI: return 32;

//--- Slowest and least stable guided busways
//
	GAaN: return 64;
	GAaE: return 64;
	GAaI: return 32;
	GAaS: return 24;
//---
	GAAN: return 64;
	GAAE: return 64;
	GAAI: return 32;
	GAAS: return 24;
//---
	GABN: return 64;
	GABE: return 64;
	GABI: return 32;
	GABS: return 24;
//---
	GAbN: return 64;
	GAbE: return 64;
	GAbI: return 32;
	GAbS: return 24;
//---
	GACN: return 64;
	GACE: return 64;
	GACI: return 32;
	GACS: return 24;
//---
	GAcN: return 64;
	GAcE: return 64;
	GAcI: return 32;
	GAcS: return 24;
//--- x2
	GBaN: return 64;
	GBaE: return 64;
	GBaI: return 32;
	GBaS: return 24;
//---
	GBAN: return 64;
	GBAE: return 64;
	GBAI: return 32;
	GBAS: return 24;
//---
	GBBN: return 64;
	GBBE: return 64;
	GBBI: return 32;
	GBBS: return 24;
//---
	GBbN: return 64;
	GBbE: return 64;
	GBbI: return 32;
	GBbS: return 24;
//---
	GBCN: return 64;
	GBCE: return 64;
	GBCI: return 32;
	GBCS: return 24;
//---
	GBcN: return 64;
	GBcE: return 64;
	//GBcI: return 32;
	GBcS: return 24;
//--- x3
	GCaN: return 64;
	GCaE: return 64;
	GCaI: return 32;
	GCaS: return 24;
//---
	GCAN: return 64;
	GCAE: return 64;
	GCAI: return 32;
	GCAS: return 24;
//---
	GCBN: return 64;
	GCBE: return 64;
	GCBI: return 32;
	GCBS: return 24;
//---
	GCbN: return 64;
	GCbE: return 64;
	GCbI: return 32;
	GCbS: return 24;
//---
	//GCCN: return 64;
	//GCCE: return 64;
	//GCCI: return 32;
	GCCS: return 24;
//---
	//GCcN: return 64;
	//GCcE: return 64;
	//GCcI: return 32;
	GCcS: return 24;
//--- x4
	GDaN: return 64;
	GDaE: return 64;
	GDaI: return 32;
	GDaS: return 24;
//---
	GDAN: return 64;
	GDAE: return 64;
	GDAI: return 32;
	GDAS: return 24;
//---
	//GDBN: return 64;
	//GDBE: return 64;
	//GDBI: return 32;
	GDBS: return 24;
//---
	//GDbN: return 64;
	//GDbE: return 64;
	//GDbI: return 32;
	GDbS: return 24;
//---
	//GDCN: return 64;
	//GDCE: return 64;
	//GDCI: return 32;
	GDCS: return 24;
//---
	//GDcN: return 64;
	//GDcE: return 64;
	//GDcI: return 32;
	GDcS: return 24;
//--- x5
	GEaN: return 64;
	GEaE: return 64;
	GEaI: return 32;
	GEaS: return 24;
//---
	GEAN: return 64;
	GEAE: return 64;
	//GEAI: return 32;
	GEAS: return 24;
//---
	//GEBN: return 64;
	//GEBE: return 64;
	//GEBI: return 32;
	GEBS: return 24;
//---
	//GEbN: return 64;
	//GEbE: return 64;
	//GEbI: return 32;
	GEbS: return 24;
//---
	//GECN: return 64;
	//GECE: return 64;
	//GECI: return 32;
	GECS: return 24;
//---
	//GEcN: return 64;
	//GEcE: return 64;
	//GEcI: return 32;
	GEcS: return 24;
//---
	CB_FAILED;
}

//------------------------------------------------TEST BUS CODE SECTION------------------------------------------------

/* This is the item that the road vehicle comes from. Change "item_autobus_0_front" to "item_<insertnamehere>_0_front". You can edit most of the properties listed under the "property" block to reflect the stats of the vehicle. */

item(FEAT_ROADVEHS, item_autobus_0_front) {
    property {
        name: string(STR_NAME_BUS_ARTICULATED);
        climates_available: bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND); // available in toyland?
        introduction_date: date(2025, 1, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 20;
        reliability_decay: 32;
        refittable_cargo_classes: bitmask();
        non_refittable_cargo_classes: bitmask();
        cargo_allow_refit: [];
        cargo_disallow_refit: [];
        cost_factor: 208;
        running_cost_factor: 6;
        sprite_id: SPRITE_ID_NEW_ROADVEH;
        speed: 100 km/h;
        refit_cost: 0;
        road_type: PAbS;
        power: 200 hp;
        running_cost_base: RUNNING_COST_ROADVEH;
		default_cargo_type: PASS;
        cargo_capacity: 40;
        weight: 6 tons;
        //air_drag_coefficient: default;
        length: 7;
		loading_speed: 6;
		visual_effect: EFFECT_SPAWN_MODEL_NONE;
		misc_flags: bitmask(ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
    }
	
/* This is the graphics block that the road vehicle's graphics comes from. Refer to Step 2 of the spriteset instructions earlier in this code to replace "set_autobus_..." and change "switch_articulated_test" to "switch_articulated_<insertnamehere>". */
	
    graphics {
        default: set_autobus_front_lighted;
        purchase: set_autobus_purchase;
        articulated_part: switch_articulated_autobus;
		speed: switch_autobus_0_speed;
		speed: switch_autobus_0_maintenance;
    }
}

/* This is the item that the road vehicle's trailer comes from. Change "item_autobus_0_rear" to "item_<insertnamehere>_0_rear". You can edit most of the properties listed under "property" to reflect the stats of the vehicle, but remember that it's supposed to be a trailer, not a vehicle unto itself. Despite this, the trailer must have at least 1 hp, due to a quirk of OpenTTD. */

item(FEAT_ROADVEHS, item_autobus_0_rear) {
    property {
        name: string(STR_NAME_BUS_ARTICULATED);
        climates_available: NO_CLIMATE; // available in toyland?
        introduction_date: date(2025, 1, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 0;
        reliability_decay: 20;
        refittable_cargo_classes: bitmask();
        non_refittable_cargo_classes: bitmask();
        cargo_allow_refit: [];
        cargo_disallow_refit: [];
        cost_factor: 0;
        running_cost_factor: 0;
        sprite_id: SPRITE_ID_NEW_ROADVEH;
        refit_cost: 0;
        road_type: PAbS;
        power: 1 hp;
        running_cost_base: RUNNING_COST_NONE;
		default_cargo_type: PASS;
        cargo_capacity: 20;
        weight: 3 tons;
        //air_drag_coefficient: default;
        length: 5;
		misc_flags: bitmask(ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
    }
    graphics {
        default: set_autobus_rear_lighted;
        //purchase: set_autobus_rear_lighted;
			
    }
}
