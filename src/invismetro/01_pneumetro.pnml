// ======= BEGIN GATE PNEU =======

// Janus Tube Sprites
spriteset(janus_purchase_set, "gfx/graphics/tram/PNEU/Gate/GTubePurchase_0.png") {
	[-18, -5]
}

spriteset(janus_head_visible_set, "gfx/graphics/tram/PNEU/Gate/GTubeHead_0.png") {
	[-16, -5]
}

spriteset(janus_middle_visible_set, "gfx/graphics/tram/PNEU/Gate/GTubeMiddle_0.png") {
	[-16, -5]
}

spriteset(janus_tail_visible_set, "gfx/graphics/tram/PNEU/Gate/GTubeTail_0.png") {
	[-16, -5]
}


// Switches

// Articulated consist generation

switch (FEAT_ROADVEHS, SELF, janus_switch_articulated, extra_callback_info1) {
    1..7: return janus_tube;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


// Gate tube visible, positional graphics switches

switch(FEAT_ROADVEHS, SELF, janus_tube_2_carriage_graphics_switch, position_in_consist) {
	0: 		janus_head_visible_set;
	1: 	    janus_tail_visible_set;
    2..7: 		invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, janus_tube_3_carriage_graphics_switch, position_in_consist) {
	0: 		janus_head_visible_set;
	1: 		janus_middle_visible_set;
	2: 		janus_tail_visible_set;
	3..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, janus_tube_4_carriage_graphics_switch, position_in_consist) {
	0: 		janus_head_visible_set;
	1..2: 	janus_middle_visible_set;
	3: 		janus_tail_visible_set;
	4..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, janus_tube_5_carriage_graphics_switch, position_in_consist) {
	0: 		janus_head_visible_set;
	1..3: 	janus_middle_visible_set;
	4: 		janus_tail_visible_set;
	5..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, janus_tube_6_carriage_graphics_switch, position_in_consist) {
	0: 		janus_head_visible_set;
	1..4: 	janus_middle_visible_set;
	5: 		janus_tail_visible_set;
	6..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, janus_tube_7_carriage_graphics_switch, position_in_consist) {
	0: 		janus_head_visible_set;
	1..5: 	janus_middle_visible_set;
	6: 		janus_tail_visible_set;
	7: 		invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, janus_tube_8_carriage_graphics_switch, position_in_consist) {
	0: 		janus_head_visible_set;
	1..6: 	janus_middle_visible_set;
	7: 		janus_tail_visible_set;
	return CB_FAILED;
}


switch(FEAT_ROADVEHS, SELF, janus_tube_consist_GFX_switch, cargo_subtype) {
    /* Pass cargo subtype to next switch  */
	0: janus_tube_2_carriage_graphics_switch;
    1: janus_tube_3_carriage_graphics_switch;
    2: janus_tube_4_carriage_graphics_switch;
	3: janus_tube_5_carriage_graphics_switch;
	4: janus_tube_6_carriage_graphics_switch;
	5: janus_tube_7_carriage_graphics_switch;
	6: janus_tube_8_carriage_graphics_switch;
	return CB_FAILED;
}


// Underground vs. window switch

switch(FEAT_ROADVEHS, SELF, janus_tube_GFX_switch, extra_callback_info1) {
    /* Decide whether vehicle is drawn on map or in a special window  */
	0x00:			underground_tube_GFX_switch;
	0x10..0x12:		janus_tube_consist_GFX_switch;
	return janus_purchase_set;
}


// Refit cost switch

switch(FEAT_ROADVEHS, SELF, janus_refit_cost_switch, var[0x10,8,0xFF] - cargo_subtype) {
    /* Refit cost based on difference between target cargo sybtype and current cargo subtype.
	   Refitting to fewer carriages refunds money, while adding carriages costs money.        */
	-6:				-(6*5);
	-5:				-(5*5);
	-4:				-(4*5);
	-3:				-(3*5);
	-2:				-(2*5);
	-1:				-(1*5);
	0:				0;
	1:				(1*5);
	2:				(2*5);
	3:				(3*5);
	4:				(4*5);
	5:				(5*5);
	6:				(6*5);
	return CB_FAILED;
}


// Running cost switch

switch(FEAT_ROADVEHS, SELF, janus_running_cost_switch, current_speed) {
    /* Running cost reduced to 1/4 if vehicle is not moving. */
	0: 				((cargo_subtype+2)*33)/4;
	return 			(cargo_subtype+2)*33;
}


// Vehicle definition

item(FEAT_ROADVEHS, janus_tube) {
	property {
		name:               			string(STR_NAME_PNEU_GATE);
		climates_available: 			bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND);
		introduction_date: 				date(1903,1,1);
		model_life:						52;
		misc_flags:						bitmask(ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
		retire_early:					10;
		vehicle_life:					30;
		sprite_id:						SPRITE_ID_NEW_ROADVEH;
		speed:            	 			65 km/h;
		power:							300 hp;
		tractive_effort_coefficient:	0.123;
		weight:							46 ton;
		cargo_capacity:					40;
		loading_speed:					100;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_MAIL);
		refit_cost:						0;
		cost_factor:					65;
		running_cost_base:				RUNNING_COST_ROADVEH;
		running_cost_factor:			132;
		length:							7;
		cargo_age_period:				90;
		tram_type:                    	PAbN;
	}
	graphics {
		articulated_part:				janus_switch_articulated;
		default:						janus_tube_GFX_switch;
		purchase:						janus_purchase_set;
		cargo_capacity:					tube_cargo_capacities_switch;
		running_cost_factor:			janus_running_cost_switch;
		purchase_running_cost_factor:	return 2*33;
		power:							return (cargo_subtype+2)*15;
		weight:							return (cargo_subtype+2)*93;
		length:							tube_shorten_vehicles;
		sound_effect:					return sound("src/none.wav");
		cargo_subtype_text:				tube_cargo_subtype_text;
		additional_text:				return string(STR_PNEU_PURCHASE_TEXT);
		refit_cost:						janus_refit_cost_switch;
	}
}

// If the tram param is set, make this a tram

if (param_RV0_or_tram1 == 1) {
	item (FEAT_ROADVEHS, janus_tube) {
		property {
			misc_flags:						bitmask(ROADVEH_FLAG_NO_BREAKDOWN_SMOKE, ROADVEH_FLAG_TRAM);
		}
	}
}

// ======= END GATE PNEU =======

//====================================================================================================================================

// ======= BEGIN GRAND WORKS PNEU =======

// Grand Works Tube Sprites
spriteset(grand_works_purchase_set, "gfx/graphics/tram/PNEU/Grand Works/GWTubePurchase_0.png") {
	[-18, -5]
}

spriteset(grand_works_head_visible_set, "gfx/graphics/tram/PNEU/Grand Works/GWTubeHead_0.png") {
	[-16, -5]
}

spriteset(grand_works_middle_visible_set, "gfx/graphics/tram/PNEU/Grand Works/GWTubeMiddle_0.png") {
	[-16, -5]
}

spriteset(grand_works_tail_visible_set, "gfx/graphics/tram/PNEU/Grand Works/GWTubeTail_0.png") {
	[-16, -5]
}


// Switches

// Articulated consist generation

switch (FEAT_ROADVEHS, SELF, grand_works_switch_articulated, extra_callback_info1) {
    1..7: return grand_works_tube;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


// New works tube visible, positional graphics switches

switch(FEAT_ROADVEHS, SELF, grand_works_tube_2_carriage_graphics_switch, position_in_consist) {
	0: 		grand_works_head_visible_set;
	1: 	    grand_works_tail_visible_set;
    2..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, grand_works_tube_3_carriage_graphics_switch, position_in_consist) {
	0: 		grand_works_head_visible_set;
	1: 		grand_works_middle_visible_set;
	2: 		grand_works_tail_visible_set;
	3..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, grand_works_tube_4_carriage_graphics_switch, position_in_consist) {
	0: 		grand_works_head_visible_set;
	1..2: 	grand_works_middle_visible_set;
	3: 		grand_works_tail_visible_set;
	4..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, grand_works_tube_5_carriage_graphics_switch, position_in_consist) {
	0: 		grand_works_head_visible_set;
	1..3: 	grand_works_middle_visible_set;
	4: 		grand_works_tail_visible_set;
	5..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, grand_works_tube_6_carriage_graphics_switch, position_in_consist) {
	0: 		grand_works_head_visible_set;
	1..4: 	grand_works_middle_visible_set;
	5: 		grand_works_tail_visible_set;
	6..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, grand_works_tube_7_carriage_graphics_switch, position_in_consist) {
	0: 		grand_works_head_visible_set;
	1..5: 	grand_works_middle_visible_set;
	6: 		grand_works_tail_visible_set;
	7: 		invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, grand_works_tube_8_carriage_graphics_switch, position_in_consist) {
	0: 		grand_works_head_visible_set;
	1..6: 	grand_works_middle_visible_set;
	7: 		grand_works_tail_visible_set;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, grand_works_tube_consist_GFX_switch, cargo_subtype) {
    /* Pass cargo subtype to next switch  */
	0: grand_works_tube_2_carriage_graphics_switch;
    1: grand_works_tube_3_carriage_graphics_switch;
    2: grand_works_tube_4_carriage_graphics_switch;
	3: grand_works_tube_5_carriage_graphics_switch;
	4: grand_works_tube_6_carriage_graphics_switch;
	5: grand_works_tube_7_carriage_graphics_switch;
	6: grand_works_tube_8_carriage_graphics_switch;
	return CB_FAILED;
}


// Underground vs. window switch

switch(FEAT_ROADVEHS, SELF, grand_works_tube_GFX_switch, extra_callback_info1) {
    /* Decide whether vehicle is drawn on map or in a special window  */
	0x00:			underground_tube_GFX_switch;
	0x10..0x12:		grand_works_tube_consist_GFX_switch;
	return grand_works_purchase_set;
}


// Refit cost switch

switch(FEAT_ROADVEHS, SELF, grand_works_refit_cost_switch, var[0x10,8,0xFF] - cargo_subtype) {
    /* Refit cost based on difference between target cargo sybtype and current cargo subtype.
	   Refitting to fewer carriages refunds money, while adding carriages costs money.        */
	-6:				-(6*7);
	-5:				-(5*7);
	-4:				-(4*7);
	-3:				-(3*7);
	-2:				-(2*7);
	-1:				-(1*7);
	0:				0;
	1:				(1*7);
	2:				(2*7);
	3:				(3*7);
	4:				(4*7);
	5:				(5*7);
	6:				(6*7);
	return CB_FAILED;
}


// Running cost switch

switch(FEAT_ROADVEHS, SELF, grand_works_running_cost_switch, current_speed) {
    /* Running cost reduced to 1/4 if vehicle is not moving. */
	0: 				((cargo_subtype+2)*40)/4;
	return 			(cargo_subtype+2)*40;
}


// Vehicle definition

item(FEAT_ROADVEHS, grand_works_tube) {
	property {
		name:               			string(STR_NAME_PNEU_NEW_WORKS);
		climates_available: 			bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND);
		introduction_date: 				date(1938,1,1);
		model_life:						57;
		misc_flags:						bitmask(ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
		retire_early:					10;
		vehicle_life:					30;
		sprite_id:						SPRITE_ID_NEW_ROADVEH;
		speed:            	 			72 km/h;
		power:							400 hp;
		tractive_effort_coefficient:	0.138;
		weight:							48 ton;
		cargo_capacity:					40;
		loading_speed:					100;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_MAIL);
		refit_cost:						0;
		cost_factor:					86;
		running_cost_base:				RUNNING_COST_ROADVEH;
		running_cost_factor:			158;
		length:							7;
		cargo_age_period:				92;
		tram_type:                    	PAbN;
	}
	graphics {
		articulated_part:				grand_works_switch_articulated;
		default:						grand_works_tube_GFX_switch;
		purchase:						grand_works_purchase_set;
		cargo_capacity:					tube_cargo_capacities_switch;
		running_cost_factor:			grand_works_running_cost_switch;
		purchase_running_cost_factor:	return 2*40;
		power:							return (cargo_subtype+2)*20;
		weight:							return (cargo_subtype+2)*96;
		length:							tube_shorten_vehicles;
		sound_effect:					return sound("src/none.wav");
		cargo_subtype_text:				tube_cargo_subtype_text;
		additional_text:				return string(STR_PNEU_PURCHASE_TEXT);
		refit_cost:						grand_works_refit_cost_switch;
	}
}

// If the tram param is set, make this a tram

if (param_RV0_or_tram1 == 1) {
	item (FEAT_ROADVEHS, grand_works_tube) {
		property {
			misc_flags:						bitmask(ROADVEH_FLAG_NO_BREAKDOWN_SMOKE, ROADVEH_FLAG_TRAM);
		}
	}
}

// ======= END NEW WORKS PNEU =======

//====================================================================================================================================

// ======= BEGIN RAIL BRITANNIA PNEU =======

// Rail Britannia Tube Sprites
spriteset(rail_britannia_purchase_set, "gfx/graphics/tram/PNEU/Rail Britannia/RBTubePurchase_0.png") {
	[-18, -5]
}

spriteset(rail_britannia_head_visible_set, "gfx/graphics/tram/PNEU/Rail Britannia/RBTubeHead_0.png") {
	[-16, -5]
}

spriteset(rail_britannia_middle_visible_set, "gfx/graphics/tram/PNEU/Rail Britannia/RBTubeMiddle_0.png") {
	[-16, -5]
}

spriteset(rail_britannia_tail_visible_set, "gfx/graphics/tram/PNEU/Rail Britannia/RBTubeTail_0.png") {
	[-16, -5]
}


// Switches

// Articulated consist generation

switch (FEAT_ROADVEHS, SELF, rail_britannia_switch_articulated, extra_callback_info1) {
    1..7: return rail_britannia_tube;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


// Rail Britannia tube visible, positional graphics switches

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_2_carriage_graphics_switch, position_in_consist) {
	0: 		rail_britannia_head_visible_set;
	1: 	    rail_britannia_tail_visible_set;
    2..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_3_carriage_graphics_switch, position_in_consist) {
	0: 		rail_britannia_head_visible_set;
	1: 		rail_britannia_middle_visible_set;
	2: 		rail_britannia_tail_visible_set;
	3..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_4_carriage_graphics_switch, position_in_consist) {
	0: 		rail_britannia_head_visible_set;
	1..2: 	rail_britannia_middle_visible_set;
	3: 		rail_britannia_tail_visible_set;
	4..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_5_carriage_graphics_switch, position_in_consist) {
	0: 		rail_britannia_head_visible_set;
	1..3: 	rail_britannia_middle_visible_set;
	4: 		rail_britannia_tail_visible_set;
	5..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_6_carriage_graphics_switch, position_in_consist) {
	0: 		rail_britannia_head_visible_set;
	1..4: 	rail_britannia_middle_visible_set;
	5: 		rail_britannia_tail_visible_set;
	6..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_7_carriage_graphics_switch, position_in_consist) {
	0: 		rail_britannia_head_visible_set;
	1..5: 	rail_britannia_middle_visible_set;
	6: 		rail_britannia_tail_visible_set;
	7: 		invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_8_carriage_graphics_switch, position_in_consist) {
	0: 		rail_britannia_head_visible_set;
	1..6: 	rail_britannia_middle_visible_set;
	7: 		rail_britannia_tail_visible_set;
	return CB_FAILED;
}


switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_consist_GFX_switch, cargo_subtype) {
    /* Pass cargo subtype to next switch  */
	0: rail_britannia_tube_2_carriage_graphics_switch;
    1: rail_britannia_tube_3_carriage_graphics_switch;
    2: rail_britannia_tube_4_carriage_graphics_switch;
	3: rail_britannia_tube_5_carriage_graphics_switch;
	4: rail_britannia_tube_6_carriage_graphics_switch;
	5: rail_britannia_tube_7_carriage_graphics_switch;
	6: rail_britannia_tube_8_carriage_graphics_switch;
	return CB_FAILED;
}


// Underground vs. window switch

switch(FEAT_ROADVEHS, SELF, rail_britannia_tube_GFX_switch, extra_callback_info1) {
    /* Decide whether vehicle is drawn on map or in a special window  */
	0x00:			underground_tube_GFX_switch;
	0x10..0x12:		rail_britannia_tube_consist_GFX_switch;
	return rail_britannia_purchase_set;
}


// Refit cost switch

switch(FEAT_ROADVEHS, SELF, rail_britannia_refit_cost_switch, var[0x10,8,0xFF] - cargo_subtype) {
    /* Refit cost based on difference between target cargo sybtype and current cargo subtype.
	   Refitting to fewer carriages refunds money, while adding carriages costs money.        */
	-6:				-(6*8);
	-5:				-(5*8);
	-4:				-(4*8);
	-3:				-(3*8);
	-2:				-(2*8);
	-1:				-(1*8);
	0:				0;
	1:				(1*8);
	2:				(2*8);
	3:				(3*8);
	4:				(4*8);
	5:				(5*8);
	6:				(6*8);
	return CB_FAILED;
}


// Running cost switch

switch(FEAT_ROADVEHS, SELF, rail_britannia_running_cost_switch, current_speed) {
    /* Running cost reduced to 1/4 if vehicle is not moving. */
	0: 				((cargo_subtype+2)*46)/4;
	return 			(cargo_subtype+2)*46;
}


// Vehicle definition

item(FEAT_ROADVEHS, rail_britannia_tube) {
	property {
		name:               			string(STR_NAME_PNEU_RAIL_BRITANNIA);
		climates_available: 			bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND);
		introduction_date: 				date(1967,1,1);
		model_life:						53;
		misc_flags:						bitmask(ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
		retire_early:					10;
		vehicle_life:					30;
		sprite_id:						SPRITE_ID_NEW_ROADVEH;
		speed:            	 			80 km/h;
		power:							500 hp;
		tractive_effort_coefficient:	0.186;
		weight:							44 ton;
		cargo_capacity:					40;
		loading_speed:					100;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_MAIL);
		refit_cost:						0;
		cost_factor:					95;
		running_cost_base:				RUNNING_COST_ROADVEH;
		running_cost_factor:			184;
		length:							7;
		cargo_age_period:				108;
		tram_type:                    	PABN;
	}
	graphics {
		articulated_part:				rail_britannia_switch_articulated;
		default:						rail_britannia_tube_GFX_switch;
		purchase:						rail_britannia_purchase_set;
		cargo_capacity:					tube_cargo_capacities_switch;
		running_cost_factor:			rail_britannia_running_cost_switch;
		purchase_running_cost_factor:	return 2*46;
		power:							return (cargo_subtype+2)*25;
		weight:							return (cargo_subtype+2)*88;
		length:							tube_shorten_vehicles;
		sound_effect:					return sound("src/none.wav");
		cargo_subtype_text:				tube_cargo_subtype_text;
		additional_text:				return string(STR_PNEU_PURCHASE_TEXT);
		refit_cost:						rail_britannia_refit_cost_switch;
	}
}

// If the tram param is set, make this a tram

if (param_RV0_or_tram1 == 1) {
	item (FEAT_ROADVEHS, rail_britannia_tube) {
		property {
			misc_flags:						bitmask(ROADVEH_FLAG_TRAM, ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
		}
	}
}

// ======= END RAIL BRITANNIA PNEU =======

//====================================================================================================================================

// ======= BEGIN XM-2000 PNEU =======

// XM-2000 Sprites
spriteset(xm2000_purchase_set, "gfx/graphics/tram/PNEU/XM-2000/XMTubePurchase_0.png") {
	[-18, -5]
}

spriteset(xm2000_head_visible_set, "gfx/graphics/tram/PNEU/XM-2000/XMTubeHead_0.png") {
	[-16, -5]
}

spriteset(xm2000_middle_visible_set, "gfx/graphics/tram/PNEU/XM-2000/XMTubeMiddle_0.png") {
	[-16, -5]
}

spriteset(xm2000_tail_visible_set, "gfx/graphics/tram/PNEU/XM-2000/XMTubeTail_0.png") {
	[-16, -5]
}


// Switches

// Articulated consist generation

switch (FEAT_ROADVEHS, SELF, xm2000_switch_articulated, extra_callback_info1) {
    1..7: return xm2000_tube;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}


// XM-2000 tube visible, positional graphics switches

switch(FEAT_ROADVEHS, SELF, xm2000_tube_2_carriage_graphics_switch, position_in_consist) {
	0: 		xm2000_head_visible_set;
	1:   	xm2000_tail_visible_set;
    2..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, xm2000_tube_3_carriage_graphics_switch, position_in_consist) {
	0: 		xm2000_head_visible_set;
	1: 		xm2000_middle_visible_set;
	2: 		xm2000_tail_visible_set;
	3..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, xm2000_tube_4_carriage_graphics_switch, position_in_consist) {
	0: 		xm2000_head_visible_set;
	1..2: 	xm2000_middle_visible_set;
	3: 		xm2000_tail_visible_set;
	4..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, xm2000_tube_5_carriage_graphics_switch, position_in_consist) {
	0: 		xm2000_head_visible_set;
	1..3: 	xm2000_middle_visible_set;
	4: 		xm2000_tail_visible_set;
	5..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, xm2000_tube_6_carriage_graphics_switch, position_in_consist) {
	0: 		xm2000_head_visible_set;
	1..4: 	xm2000_middle_visible_set;
	5: 		xm2000_tail_visible_set;
	6..7: 	invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, xm2000_tube_7_carriage_graphics_switch, position_in_consist) {
	0: 		xm2000_head_visible_set;
	1..5: 	xm2000_middle_visible_set;
	6: 		xm2000_tail_visible_set;
	7: 		invisible;
	return CB_FAILED;
}

switch(FEAT_ROADVEHS, SELF, xm2000_tube_8_carriage_graphics_switch, position_in_consist) {
	0: 		xm2000_head_visible_set;
	1..6: 	xm2000_middle_visible_set;
	7: 		xm2000_tail_visible_set;
	return CB_FAILED;
}


switch(FEAT_ROADVEHS, SELF, xm2000_tube_consist_GFX_switch, cargo_subtype) {
    /* Pass cargo subtype to next switch  */
	0: xm2000_tube_2_carriage_graphics_switch;
    1: xm2000_tube_3_carriage_graphics_switch;
    2: xm2000_tube_4_carriage_graphics_switch;
	3: xm2000_tube_5_carriage_graphics_switch;
	4: xm2000_tube_6_carriage_graphics_switch;
	5: xm2000_tube_7_carriage_graphics_switch;
	6: xm2000_tube_8_carriage_graphics_switch;
	return CB_FAILED;
}


// Underground vs. window switch

switch(FEAT_ROADVEHS, SELF, xm2000_tube_GFX_switch, extra_callback_info1) {
    /* Decide whether vehicle is drawn on map or in a special window  */
	0x00:			underground_tube_GFX_switch;
	0x10..0x12:		xm2000_tube_consist_GFX_switch;
	return xm2000_purchase_set;
}


// Refit cost switch

switch(FEAT_ROADVEHS, SELF, xm2000_refit_cost_switch, var[0x10,8,0xFF] - cargo_subtype) {
    /* Refit cost based on difference between target cargo sybtype and current cargo subtype.
	   Refitting to fewer carriages refunds money, while adding carriages costs money.        */
	-6:				-(6*10);
	-5:				-(5*10);
	-4:				-(4*10);
	-3:				-(3*10);
	-2:				-(2*10);
	-1:				-(1*10);
	0:				0;
	1:				(1*10);
	2:				(2*10);
	3:				(3*10);
	4:				(4*10);
	5:				(5*10);
	6:				(6*10);
	return CB_FAILED;
}


// Running cost switch

switch(FEAT_ROADVEHS, SELF, xm2000_running_cost_switch, current_speed) {
    /* Running cost reduced to 1/4 if vehicle is not moving. */
	0: 				((cargo_subtype+2)*53)/4;
	return 			(cargo_subtype+2)*53;
}


// Vehicle definition

item(FEAT_ROADVEHS, xm2000_tube) {
	property {
		name:               			string(STR_NAME_PNEU_ADTRANZ);
		climates_available: 			bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND);
		introduction_date: 				date(1992,1,1);
		model_life:						75;
		misc_flags:						bitmask(ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
		vehicle_life:					30;
		sprite_id:						SPRITE_ID_NEW_ROADVEH;
		speed:            	 			100 km/h;
		power:							600 hp;
		tractive_effort_coefficient:	0.179;
		weight:							46 ton;
		cargo_capacity:					40;
		loading_speed:					100;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS, CC_MAIL);
		refit_cost:						0;
		cost_factor:					119;
		running_cost_base:				RUNNING_COST_ROADVEH;
		running_cost_factor:			212;
		length:							7;
		cargo_age_period:				120;
		tram_type:                    	PAbN;
	}
	graphics {
		articulated_part:				xm2000_switch_articulated;
		default:						xm2000_tube_GFX_switch;
		purchase:						xm2000_purchase_set;
		cargo_capacity:					tube_cargo_capacities_switch;
		running_cost_factor:			xm2000_running_cost_switch;
		purchase_running_cost_factor:	return 2*53;
		power:							return (cargo_subtype+2)*30;
		weight:							return (cargo_subtype+2)*93;
		length:							tube_shorten_vehicles;
		sound_effect:					return sound("src/none.wav");
		cargo_subtype_text:				tube_cargo_subtype_text;
		additional_text:				return string(STR_PNEU_PURCHASE_TEXT);
		refit_cost:						xm2000_refit_cost_switch;
	}
}

// If the tram param is set, make this a tram

if (param_RV0_or_tram1 == 1) {
	item (FEAT_ROADVEHS, xm2000_tube) {
		property {
			misc_flags:						bitmask(ROADVEH_FLAG_TRAM, ROADVEH_FLAG_2CC, ROADVEH_FLAG_NO_BREAKDOWN_SMOKE);
		}
	}
}

// ======= END XM-2000 PNEU =======
